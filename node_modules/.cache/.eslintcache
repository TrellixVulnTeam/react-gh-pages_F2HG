[{"/home/arcanjolevi/Documents/www/react-gh-pages/src/index.tsx":"1","/home/arcanjolevi/Documents/www/react-gh-pages/src/App.tsx":"2","/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Layout.tsx":"3","/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Auth.tsx":"4","/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Location.tsx":"5","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/login/Login.tsx":"6","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/layout/Layout.tsx":"7","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/home/Home.tsx":"8","/home/arcanjolevi/Documents/www/react-gh-pages/src/services/firebase.ts":"9","/home/arcanjolevi/Documents/www/react-gh-pages/src/services/api.ts":"10","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/map/Map.tsx":"11","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/navBar/NavBar.tsx":"12","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/FleetStatus.tsx":"13","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/Estatistics/Estatistics.tsx":"14","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/checklists/CheckLists.tsx":"15","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/Filters/Filters.tsx":"16","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/drivers/Drivers.tsx":"17","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/fleet/Fleet.tsx":"18","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/Finances/Finances.tsx":"19","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/fleetRoutes/fleetRoutes.tsx":"20","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/calls/Calls.tsx":"21","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/settings/Settings.tsx":"22","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/profileBall/ProfileBall.tsx":"23","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/ContactsPage.tsx":"24","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/VehiclesList.tsx":"25","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/MsgPage.tsx":"26","/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Messages.tsx":"27","/home/arcanjolevi/Documents/www/react-gh-pages/src/utils/time.ts":"28"},{"size":230,"mtime":1629311581076,"results":"29","hashOfConfig":"30"},{"size":1277,"mtime":1629891011323,"results":"31","hashOfConfig":"30"},{"size":757,"mtime":1629311581076,"results":"32","hashOfConfig":"30"},{"size":2275,"mtime":1630359124153,"results":"33","hashOfConfig":"30"},{"size":2030,"mtime":1630359481395,"results":"34","hashOfConfig":"30"},{"size":1003,"mtime":1629841030151,"results":"35","hashOfConfig":"30"},{"size":1717,"mtime":1629474376254,"results":"36","hashOfConfig":"30"},{"size":1671,"mtime":1629474312750,"results":"37","hashOfConfig":"30"},{"size":530,"mtime":1629891243704,"results":"38","hashOfConfig":"30"},{"size":229,"mtime":1630352665243,"results":"39","hashOfConfig":"30"},{"size":1484,"mtime":1630359493572,"results":"40","hashOfConfig":"30"},{"size":4002,"mtime":1629474423867,"results":"41","hashOfConfig":"30"},{"size":1967,"mtime":1629899581481,"results":"42","hashOfConfig":"30"},{"size":133,"mtime":1629474210050,"results":"43","hashOfConfig":"30"},{"size":131,"mtime":1629474236596,"results":"44","hashOfConfig":"30"},{"size":125,"mtime":1629474217540,"results":"45","hashOfConfig":"30"},{"size":125,"mtime":1629474246050,"results":"46","hashOfConfig":"30"},{"size":121,"mtime":1629474254846,"results":"47","hashOfConfig":"30"},{"size":127,"mtime":1629474223086,"results":"48","hashOfConfig":"30"},{"size":134,"mtime":1629474264890,"results":"49","hashOfConfig":"30"},{"size":121,"mtime":1629474229833,"results":"50","hashOfConfig":"30"},{"size":127,"mtime":1629474288043,"results":"51","hashOfConfig":"30"},{"size":794,"mtime":1629474436851,"results":"52","hashOfConfig":"30"},{"size":1126,"mtime":1629901138667,"results":"53","hashOfConfig":"30"},{"size":1516,"mtime":1629917367821,"results":"54","hashOfConfig":"30"},{"size":2575,"mtime":1630355350318,"results":"55","hashOfConfig":"30"},{"size":3419,"mtime":1630359245737,"results":"56","hashOfConfig":"30"},{"size":421,"mtime":1629917358537,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4vqntz",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arcanjolevi/Documents/www/react-gh-pages/src/index.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/App.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Layout.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Auth.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Location.tsx",["119"],"import { ReactNode } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport api from \"../services/api\";\n\ntype ComponentProps = {\n  children: ReactNode;\n};\n\nexport type DriverProps = {\n  driverId: string;\n  driverName: string;\n  driverPicture: string;\n};\n\nexport type CordType = {\n  driverId: string;\n  latitude: number;\n  longitude: number;\n  accuracy: number;\n  heading: number;\n  altitude: number;\n  altitudeAccuracy: number;\n  speed: number;\n  timestamp: string;\n  maxTimestamp: string;\n};\n\ntype LocationObject = {\n  cords: CordType[];\n  drivers: DriverProps[];\n  cordOnFocus: CordType;\n  setCordsOnFocus: (driverId: string) => void;\n  zoom?: number;\n};\n\nexport const LocationContext = createContext({} as LocationObject);\n\nexport function LocationContextProvider(props: ComponentProps) {\n  const [zoom, setZoom] = useState(15);\n\n  const [counter, setCounter] = useState(0);\n\n  const [cords, setCords] = useState<CordType[]>([]);\n  const [drivers, setDrivers] = useState<DriverProps[]>([]);\n\n  const [cordOnFocus, changeCordsOnFocus] = useState<CordType>({\n    accuracy: 0,\n    altitude: 0,\n    altitudeAccuracy: 0,\n    driverId: \"0\",\n    heading: 0,\n    maxTimestamp: \"\",\n    speed: 0,\n    timestamp: \"\",\n    latitude: -25.5415553,\n    longitude: -54.5508768,\n  });\n\n  useEffect(() => {\n    api.get(\"all_last_coordinates\").then((r) => {\n      const data = r.data;\n      setCords(data.coordinates);\n    });\n\n    api.get(\"all_drivers\").then((r) => {\n      const data = r.data;\n      setDrivers(data);\n    });\n  }, [counter]);\n\n  function setCordsOnFocus(driverId: string) {\n    console.log(\"oi\");\n    const vet = cords.filter((i) => {\n      return i.driverId === driverId;\n    });\n    console.log(vet[0].longitude);\n    setZoom(zoom + 1);\n    changeCordsOnFocus(vet[0]);\n  }\n\n  return (\n    <LocationContext.Provider\n      value={{ cordOnFocus, setCordsOnFocus, cords, drivers, zoom }}\n    >\n      {props.children}\n    </LocationContext.Provider>\n  );\n}\n","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/login/Login.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/layout/Layout.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/home/Home.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/services/firebase.ts",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/services/api.ts",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/map/Map.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/navBar/NavBar.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/FleetStatus.tsx",["120","121","122","123","124","125","126","127"],"import \"./fleetStatus.scss\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { LocationContext } from \"../../contexts/Location\";\nimport { useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { MessageSquare } from \"react-feather\";\nimport { useRef } from \"react\";\nimport { VehiclesList } from \"./VehiclesList\";\nimport { MsgList } from \"./MsgList\";\nimport { ContactsPage } from \"./ContactsPage\";\nimport { MsgPage } from \"./MsgPage\";\nimport { MessageContextProvider } from \"../../contexts/Messages\";\n\nconst vet = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n];\n\nexport function FleetStatus() {\n  const [currentTab, setCurrentTab] = useState(0);\n  const { drivers } = useContext(LocationContext);\n  const [driverOnFocus, setDriverOnFocus] = useState(\"\");\n\n  return (\n    <div id=\"fleet-status-container\">\n      <div id=\"status-menu\">\n        <div\n          onClick={() => setCurrentTab(0)}\n          className={`status-menu-item ${currentTab === 0 ? \"clicked\" : \"\"}`}\n        >\n          <h3>Usuários</h3>\n        </div>\n\n        <div\n          onClick={() => {\n            setCurrentTab(1);\n          }}\n          className={`status-menu-item ${\n            currentTab === 1 || currentTab === 2 ? \"clicked\" : \"\"\n          }`}\n        >\n          <h3>Mensagens</h3>\n        </div>\n      </div>\n\n      <div id=\"content\">\n        {currentTab === 0 ? <VehiclesList content={drivers} /> : \"\"}\n        <MessageContextProvider>\n          {currentTab === 1 ? (\n            <ContactsPage goToChat={() => setCurrentTab(2)} />\n          ) : (\n            \"\"\n          )}\n          {currentTab === 2 ? <MsgPage goBack={() => setCurrentTab(1)} /> : \"\"}\n        </MessageContextProvider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * \n *  {currentTab === 1 ? (\n          <div onClick={() => setCurrentTab(2)} id=\"new-msg-btn\">\n            <MessageSquare />\n          </div>\n        ) : (\n          \"\"\n        )}\n */\n","/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/Estatistics/Estatistics.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/checklists/CheckLists.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/Filters/Filters.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/drivers/Drivers.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/fleet/Fleet.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/Finances/Finances.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/fleetRoutes/fleetRoutes.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/calls/Calls.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/pages/settings/Settings.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/profileBall/ProfileBall.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/ContactsPage.tsx",["128"],"import { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { MessageContext } from \"../../contexts/Messages\";\n\ntype ContactsPageParams = {\n  goToChat: () => void;\n};\n\nexport function ContactsPage({ goToChat }: ContactsPageParams) {\n  const { getUsersOnline, usersOnline, changeCurrentChatUser } =\n    useContext(MessageContext);\n\n  useEffect(() => {\n    getUsersOnline();\n  }, []);\n\n  return (\n    <div id=\"scroll-zone\">\n      <ul id=\"msg-list\">\n        {usersOnline.length === 0 ? (\n          <li>\n            <div id=\"msg-info1\">\n              <h3>Nenhum usuário online no momento</h3>\n            </div>\n          </li>\n        ) : (\n          \"\"\n        )}\n        {usersOnline.map((i) => {\n          return (\n            <li\n              onClick={() => {\n                changeCurrentChatUser(i);\n                goToChat();\n              }}\n              key={i.authId}\n            >\n              <img src={i.picture} alt=\"profile\" />\n              <div id=\"msg-info1\">\n                <h3>{i.name}</h3>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/VehiclesList.tsx",[],"/home/arcanjolevi/Documents/www/react-gh-pages/src/Components/fleetStatus/MsgPage.tsx",["129","130","131","132"],"import \"./msg-page.scss\";\nimport { Play, ArrowLeft } from \"react-feather\";\nimport { useContext } from \"react\";\nimport { MessageContext } from \"../../contexts/Messages\";\nimport { AuthContext } from \"../../contexts/Auth\";\nimport { useRef } from \"react\";\nimport { getElapsedTime } from \"../../utils/time\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\ntype MsgPageParams = {\n  goBack: () => void;\n};\n\nexport function MsgPage({ goBack }: MsgPageParams) {\n  const { user } = useContext(AuthContext);\n  const { currentChatUser, messages, sendMsg } = useContext(MessageContext);\n\n  const [text, setText] = useState(\"\");\n  return (\n    <div className=\"msg-page\">\n      <div className=\"msg-header\">\n        <ArrowLeft\n          onClick={goBack}\n          className=\"back-btn\"\n          color=\"#505050\"\n          size={20}\n        />\n        <div className=\"contact\">\n          <p>{currentChatUser?.name}</p>\n          <img src={currentChatUser?.picture} alt=\"img\" />\n        </div>\n      </div>\n\n      <div className=\"msg-scroll-zone\">\n        );\n        {messages.map((i) =>\n          i.senderId === user.uid ? (\n            <div key={i.message} className=\"msg-body-sent\">\n              <div className=\"msg-data\">\n                <div className=\"msg-text\">{i.message}</div>\n                <div className=\"msg-time\">\n                  {i.timestamp\n                    ? new Date(i.timestamp).toLocaleTimeString()\n                    : \"\"}\n                </div>\n              </div>\n              <img src={user.photoURL || \"\"} alt=\"img\" />\n            </div>\n          ) : (\n            <div className=\"msg-body-received\">\n              <img src={currentChatUser?.picture} alt=\"img\" />\n              <div className=\"msg-data\">\n                <div className=\"msg-text\">{i.message}</div>\n                <div className=\"msg-time\">\n                  {i.timestamp\n                    ? new Date(i.timestamp).toLocaleTimeString()\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n      <div className=\"msg-edit-zone\">\n        <textarea\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n          value={text}\n          name=\"msg\"\n          id=\"chat-msg-input\"\n        ></textarea>\n        <div\n          onClick={() => {\n            sendMsg(text);\n            setText(\"\");\n            let obj = document.getElementById(\"msg-scroll-zone\");\n          }}\n          className=\"send-btn\"\n        >\n          <Play />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Messages.tsx",["133","134"],"import { ReactNode } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { baseUrlServer } from \"../services/api\";\nimport { AuthContext } from \"./Auth\";\n\ntype ComponentProps = {\n  children: ReactNode;\n};\n\nexport type ChatUserProps = {\n  authId: string;\n  name: string;\n  picture: string;\n  type: string;\n};\n\nexport type MessageProps = {\n  supervisorId: string;\n  driverId: string;\n  message: string;\n  senderId: string;\n  timestamp?: number;\n};\n\nexport type MessageObject = {\n  getUsersOnline: () => void;\n  usersOnline: ChatUserProps[];\n  currentChatUser?: ChatUserProps;\n  changeCurrentChatUser: (value: ChatUserProps) => void;\n  messages: MessageProps[];\n  sendMsg: (value: string) => void;\n};\n\nexport const MessageContext = createContext({} as MessageObject);\n\nexport function MessageContextProvider(props: ComponentProps) {\n  const { user } = useContext(AuthContext);\n\n  const [messages, setMessages] = useState<MessageProps[]>([]);\n  const [buffer, setBuffer] = useState<MessageProps>();\n\n  const [usersOnline, setUsersOnline] = useState<ChatUserProps[]>([]);\n  const [currentChatUser, setCurrentChatUser] = useState<ChatUserProps>();\n\n  const [socket, setSocket] = useState(io());\n\n  useEffect(() => {\n    console.log(messages);\n  }, [messages]);\n\n  useEffect(() => {\n    if (typeof buffer !== \"undefined\") {\n      setMessages([...messages, buffer]);\n    }\n  }, [buffer]);\n\n  useEffect(() => {\n    const newSocket = io(baseUrlServer, {\n      query: {\n        id: user.uid,\n        type: \"supervisor\",\n      },\n    });\n\n    newSocket.on(\"disconnect\", () => {\n      console.log(\"client desconectado\");\n    });\n\n    newSocket.on(\"message\", (data) => {\n      console.log(data);\n      receiveMsg(data.message, data.driverId, data.supervisorId, data.senderId);\n    });\n\n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  function getUsersOnline() {\n    socket.emit(\"online\", {}, (data: any) => {\n      console.log(data);\n\n      setUsersOnline(data);\n    });\n  }\n\n  function changeCurrentChatUser(chatUser: ChatUserProps) {\n    setMessages([]);\n    setCurrentChatUser(chatUser);\n\n    socket.emit(\"chat\", {\n      id1: user.uid,\n      id2: chatUser.authId,\n    });\n  }\n\n  function receiveMsg(\n    message: string,\n    driverId: string,\n    supervisorId: string,\n    senderId: string\n  ) {\n    console.log(message);\n    const newMsg: MessageProps = {\n      driverId: driverId,\n      message: message,\n      senderId: senderId,\n      supervisorId: supervisorId,\n      timestamp: new Date().getTime(),\n    };\n\n    setBuffer(newMsg);\n  }\n\n  function sendMsg(msg: string) {\n    socket.emit(\"message\", {\n      driverId: currentChatUser?.authId || \"\",\n      message: msg,\n      senderId: user.uid,\n      supervisorId: user.uid,\n    });\n\n    const newMsg: MessageProps = {\n      driverId: currentChatUser?.authId || \"\",\n      message: msg,\n      senderId: user.uid,\n      supervisorId: user.uid,\n      timestamp: new Date().getTime(),\n    };\n    setBuffer(newMsg);\n  }\n\n  return (\n    <MessageContext.Provider\n      value={{\n        currentChatUser,\n        usersOnline,\n        getUsersOnline,\n        changeCurrentChatUser,\n        messages,\n        sendMsg,\n      }}\n    >\n      {props.children}\n    </MessageContext.Provider>\n  );\n}\n","/home/arcanjolevi/Documents/www/react-gh-pages/src/utils/time.ts",[],{"ruleId":"135","severity":1,"message":"136","line":43,"column":19,"nodeType":"137","messageId":"138","endLine":43,"endColumn":29},{"ruleId":"135","severity":1,"message":"139","line":5,"column":10,"nodeType":"137","messageId":"138","endLine":5,"endColumn":19},{"ruleId":"135","severity":1,"message":"140","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":10},{"ruleId":"135","severity":1,"message":"141","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":23},{"ruleId":"135","severity":1,"message":"142","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":16},{"ruleId":"135","severity":1,"message":"143","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":17},{"ruleId":"135","severity":1,"message":"144","line":15,"column":7,"nodeType":"137","messageId":"138","endLine":15,"endColumn":10},{"ruleId":"135","severity":1,"message":"145","line":22,"column":10,"nodeType":"137","messageId":"138","endLine":22,"endColumn":23},{"ruleId":"135","severity":1,"message":"146","line":22,"column":25,"nodeType":"137","messageId":"138","endLine":22,"endColumn":41},{"ruleId":"147","severity":1,"message":"148","line":15,"column":6,"nodeType":"149","endLine":15,"endColumn":8,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"142","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"135","severity":1,"message":"151","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":24},{"ruleId":"135","severity":1,"message":"139","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":19},{"ruleId":"135","severity":1,"message":"152","line":78,"column":17,"nodeType":"137","messageId":"138","endLine":78,"endColumn":20},{"ruleId":"147","severity":1,"message":"153","line":59,"column":6,"nodeType":"149","endLine":59,"endColumn":14,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"155","line":83,"column":6,"nodeType":"149","endLine":83,"endColumn":8,"suggestions":"156"},"@typescript-eslint/no-unused-vars","'setCounter' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'io' is defined but never used.","'MessageSquare' is defined but never used.","'useRef' is defined but never used.","'MsgList' is defined but never used.","'vet' is assigned a value but never used.","'driverOnFocus' is assigned a value but never used.","'setDriverOnFocus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersOnline'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'getElapsedTime' is defined but never used.","'obj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["158"],"React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["159"],{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [getUsersOnline]",{"range":"166","text":"167"},"Update the dependencies array to be: [buffer, messages]",{"range":"168","text":"169"},"Update the dependencies array to be: [user.uid]",{"range":"170","text":"171"},[396,398],"[getUsersOnline]",[1521,1529],"[buffer, messages]",[2006,2008],"[user.uid]"]