{"ast":null,"code":"import _slicedToArray from\"/home/arcanjolevi/Documents/www/react-gh-pages/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect}from\"react\";import{useState}from\"react\";import{createContext}from\"react\";import api from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";export var LocationContext=/*#__PURE__*/createContext({});export function LocationContextProvider(props){var _useState=useState(15),_useState2=_slicedToArray(_useState,2),zoom=_useState2[0],setZoom=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),counter=_useState4[0],setCounter=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),cords=_useState6[0],setCords=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),drivers=_useState8[0],setDrivers=_useState8[1];var _useState9=useState({accuracy:0,altitude:0,altitudeAccuracy:0,driverId:\"0\",heading:0,maxTimestamp:\"\",speed:0,timestamp:\"\",latitude:-25.5415553,longitude:-54.5508768}),_useState10=_slicedToArray(_useState9,2),cordOnFocus=_useState10[0],changeCordsOnFocus=_useState10[1];useEffect(function(){api.get(\"all_last_coordinates\").then(function(r){var data=r.data;setCords(data.coordinates);});api.get(\"all_drivers\").then(function(r){var data=r.data;setDrivers(data);});},[counter]);function setCordsOnFocus(driverId){console.log(\"oi\");var vet=cords.filter(function(i){return i.driverId===driverId;});console.log(vet[0].longitude);setZoom(zoom+1);changeCordsOnFocus(vet[0]);}return/*#__PURE__*/_jsx(LocationContext.Provider,{value:{cordOnFocus:cordOnFocus,setCordsOnFocus:setCordsOnFocus,cords:cords,drivers:drivers,zoom:zoom},children:props.children});}","map":{"version":3,"sources":["/home/arcanjolevi/Documents/www/react-gh-pages/src/contexts/Location.tsx"],"names":["useEffect","useState","createContext","api","LocationContext","LocationContextProvider","props","zoom","setZoom","counter","setCounter","cords","setCords","drivers","setDrivers","accuracy","altitude","altitudeAccuracy","driverId","heading","maxTimestamp","speed","timestamp","latitude","longitude","cordOnFocus","changeCordsOnFocus","get","then","r","data","coordinates","setCordsOnFocus","console","log","vet","filter","i","children"],"mappings":"qKACA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,aAAT,KAA8B,OAA9B,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,C,2CAiCA,MAAO,IAAMC,CAAAA,eAAe,cAAGF,aAAa,CAAC,EAAD,CAArC,CAEP,MAAO,SAASG,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwD,CAC7D,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEA,eAA8BP,QAAQ,CAAC,CAAD,CAAtC,yCAAOQ,OAAP,eAAgBC,UAAhB,eAEA,eAA0BT,QAAQ,CAAa,EAAb,CAAlC,yCAAOU,KAAP,eAAcC,QAAd,eACA,eAA8BX,QAAQ,CAAgB,EAAhB,CAAtC,yCAAOY,OAAP,eAAgBC,UAAhB,eAEA,eAA0Cb,QAAQ,CAAW,CAC3Dc,QAAQ,CAAE,CADiD,CAE3DC,QAAQ,CAAE,CAFiD,CAG3DC,gBAAgB,CAAE,CAHyC,CAI3DC,QAAQ,CAAE,GAJiD,CAK3DC,OAAO,CAAE,CALkD,CAM3DC,YAAY,CAAE,EAN6C,CAO3DC,KAAK,CAAE,CAPoD,CAQ3DC,SAAS,CAAE,EARgD,CAS3DC,QAAQ,CAAE,CAAC,UATgD,CAU3DC,SAAS,CAAE,CAAC,UAV+C,CAAX,CAAlD,0CAAOC,WAAP,gBAAoBC,kBAApB,gBAaA1B,SAAS,CAAC,UAAM,CACdG,GAAG,CAACwB,GAAJ,CAAQ,sBAAR,EAAgCC,IAAhC,CAAqC,SAACC,CAAD,CAAO,CAC1C,GAAMC,CAAAA,IAAI,CAAGD,CAAC,CAACC,IAAf,CACAlB,QAAQ,CAACkB,IAAI,CAACC,WAAN,CAAR,CACD,CAHD,EAKA5B,GAAG,CAACwB,GAAJ,CAAQ,aAAR,EAAuBC,IAAvB,CAA4B,SAACC,CAAD,CAAO,CACjC,GAAMC,CAAAA,IAAI,CAAGD,CAAC,CAACC,IAAf,CACAhB,UAAU,CAACgB,IAAD,CAAV,CACD,CAHD,EAID,CAVQ,CAUN,CAACrB,OAAD,CAVM,CAAT,CAYA,QAASuB,CAAAA,eAAT,CAAyBd,QAAzB,CAA2C,CACzCe,OAAO,CAACC,GAAR,CAAY,IAAZ,EACA,GAAMC,CAAAA,GAAG,CAAGxB,KAAK,CAACyB,MAAN,CAAa,SAACC,CAAD,CAAO,CAC9B,MAAOA,CAAAA,CAAC,CAACnB,QAAF,GAAeA,QAAtB,CACD,CAFW,CAAZ,CAGAe,OAAO,CAACC,GAAR,CAAYC,GAAG,CAAC,CAAD,CAAH,CAAOX,SAAnB,EACAhB,OAAO,CAACD,IAAI,CAAG,CAAR,CAAP,CACAmB,kBAAkB,CAACS,GAAG,CAAC,CAAD,CAAJ,CAAlB,CACD,CAED,mBACE,KAAC,eAAD,CAAiB,QAAjB,EACE,KAAK,CAAE,CAAEV,WAAW,CAAXA,WAAF,CAAeO,eAAe,CAAfA,eAAf,CAAgCrB,KAAK,CAALA,KAAhC,CAAuCE,OAAO,CAAPA,OAAvC,CAAgDN,IAAI,CAAJA,IAAhD,CADT,UAGGD,KAAK,CAACgC,QAHT,EADF,CAOD","sourcesContent":["import { ReactNode } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport api from \"../services/api\";\n\ntype ComponentProps = {\n  children: ReactNode;\n};\n\nexport type DriverProps = {\n  driverId: string;\n  driverName: string;\n  driverPicture: string;\n};\n\nexport type CordType = {\n  driverId: string;\n  latitude: number;\n  longitude: number;\n  accuracy: number;\n  heading: number;\n  altitude: number;\n  altitudeAccuracy: number;\n  speed: number;\n  timestamp: string;\n  maxTimestamp: string;\n};\n\ntype LocationObject = {\n  cords: CordType[];\n  drivers: DriverProps[];\n  cordOnFocus: CordType;\n  setCordsOnFocus: (driverId: string) => void;\n  zoom?: number;\n};\n\nexport const LocationContext = createContext({} as LocationObject);\n\nexport function LocationContextProvider(props: ComponentProps) {\n  const [zoom, setZoom] = useState(15);\n\n  const [counter, setCounter] = useState(0);\n\n  const [cords, setCords] = useState<CordType[]>([]);\n  const [drivers, setDrivers] = useState<DriverProps[]>([]);\n\n  const [cordOnFocus, changeCordsOnFocus] = useState<CordType>({\n    accuracy: 0,\n    altitude: 0,\n    altitudeAccuracy: 0,\n    driverId: \"0\",\n    heading: 0,\n    maxTimestamp: \"\",\n    speed: 0,\n    timestamp: \"\",\n    latitude: -25.5415553,\n    longitude: -54.5508768,\n  });\n\n  useEffect(() => {\n    api.get(\"all_last_coordinates\").then((r) => {\n      const data = r.data;\n      setCords(data.coordinates);\n    });\n\n    api.get(\"all_drivers\").then((r) => {\n      const data = r.data;\n      setDrivers(data);\n    });\n  }, [counter]);\n\n  function setCordsOnFocus(driverId: string) {\n    console.log(\"oi\");\n    const vet = cords.filter((i) => {\n      return i.driverId === driverId;\n    });\n    console.log(vet[0].longitude);\n    setZoom(zoom + 1);\n    changeCordsOnFocus(vet[0]);\n  }\n\n  return (\n    <LocationContext.Provider\n      value={{ cordOnFocus, setCordsOnFocus, cords, drivers, zoom }}\n    >\n      {props.children}\n    </LocationContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}